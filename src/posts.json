{"1556646875528":{"title":"My first test blog post!","subtitle":"What will it look like...","contentType":"fun","mainImageCaption":"The cute cat","mainImageAltText":"A cute cat picture","post":"<h2>The Question: Is there a way to change the size of the SVG viewbox with CSS, but preserve the aspect ratio? OR is there another way to preserve the aspect ratio of the SVG without a view box.</h2>\r\n\r\nThe Problem: I want to responsively adjust the size of the SVG, but keep the aspect ratio. The width of the viewbox adjusts with the page, but the height doesn't adjust with the width. The problem with that is that the height of the container div is dependent on the height of the viewbox. So the container div may be really tall even if there's nothing showing in the bottom half of the viewbox.\r\n\r\nFiddle: http://jsfiddle.net/hT9Jb/1/\r\n\r\n<style>\r\n    div{\r\n        width: 100%;\r\n        height: 500px;\r\n        background-color: #00ffff;\r\n    }\r\n\r\n    svg{\r\n        width: 50%;\r\n        background-color: #ffff00;\r\n    }\r\n</style>\r\n\r\n<div>\r\n    <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"250px\" height=\"400px\" viewBox=\"0 0 250 400\" enable-background=\"new 0 0 250 400\" aspect-ratio=\"XminYmin\">\r\n        <rect x=\"0\" y=\"0\" fill=\"#FF0000\" width=\"250\" height=\"400\"/>\r\n    </svg>\r\n</div>\r\n(Object SVGs and img SVGs wont work for my purposes. It has to be inline. The solution doesn't have to be CSS...javascript is definitely an acceptable solution.)\r\n\r\ncss svg\r\nshareedit\r\nasked Jun 28 '14 at 2:44\r\n\r\nGeoffrey Burdett\r\n8821820\r\nlooking for this? jsfiddle.net/hT9Jb/2 – Kheema Pandey Jun 28 '14 at 3:12\r\nThis may be related: stackoverflow.com/questions/23073219/… – Parag Jun 28 '14 at 3:14\r\n@KheemaPandey I want the div to conform to the svg, not the other way around (And the fiddle you gave me doesn't preserve the aspect ratio of the viewbox) – Geoffrey Burdett Jun 29 '14 at 11:24\r\n@Sisyphus That's all serverside, but it does give me a javascript idea. – Geoffrey Burdett Jun 29 '14 at 11:27\r\nadd a comment\r\n6 Answers\r\nactive oldest votes\r\n\r\n5\r\n\r\nI haven't yet found a way to change the viewBox property with CSS. However this Javascript solution works well:\r\n\r\nvar mySVG = document.getElementById('svg');\r\nmySVG.setAttribute(\"viewBox\", \"0 0 100 100\");\r\nAlso remove any references to width and height from the SVG and set them in CSS. Even though your working with an SVG, it's inline so cascading rules apply.\r\n\r\nshareedit\r\nanswered Sep 8 '17 at 4:36\r\n\r\nsansSpoon\r\n725518\r\nadd a comment\r\n\r\n \r\n4\r\n\r\nThe width and height values specified in your SVG are the cause of your problem.\r\n\r\nThe solution is to fix your SVG file. Change:\r\n\r\nwidth=\"250px\" height=\"400px\"\r\nto\r\n\r\nwidth=\"100%\" height=\"100%\"\r\nOr with CSS:\r\n\r\nwidth: 100%;\r\nheight: 100%; \r\nshareedit\r\nedited May 5 '18 at 0:47\r\nanswered Aug 21 '16 at 8:54\r\n\r\nPaul LeBeau\r\n58.5k56996\r\nadd a comment\r\n\r\n2\r\n\r\nIn order to have a flexible SVG, that allows you to change its width and height, you need to remove completely the width and height and work with viewbox instead.\r\n\r\nAnd, contrary to what sansSpoon said, you do not need javascript to do this.\r\n\r\nIn your css, refer to your svg and define its max-width and max-height, for example:\r\n\r\n.my_svg_element {\r\n    max-width: 250px;\r\n    max-width: 400px;\r\n\r\n}\r\nAfter that, your SVG will be elastic and, at the same time, will respect the max width and height you have defined before.\r\n\r\nshareedit\r\nedited Mar 23 '18 at 20:20\r\nanswered Feb 7 '18 at 13:22\r\n\r\nPaulo Coghi\r\n4,22785479\r\nadd a comment\r\n\r\n2\r\n\r\nDid you try:\r\n\r\npreserveAspectRatio='xMinYMin'\r\nCheck this example http://jsfiddle.net/hT9Jb/3/\r\n\r\nFor more details, see mozila documentation about svg","metatitle":"Cute acat alert1","metadescription":"The cute cat will perform well in GOogle","contentTags":"","tagString":"javascript mysql android ","mainImage":{"name":"cat640x360px.jpeg","size":46716,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/cat640x360px.jpeg","type":"image/jpeg"},"thumbnail":{"name":"cat640x360px.jpeg","size":46716,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/cat640x360px.jpeg","type":"image/jpeg"},"authorName":"Bobby Sebolao","date":"Tue Apr 30 2019 18:54:35 GMT+0100 (British Summer Time)","filename":"post-1.html","readingminutes":2},"1556646953298":{"title":"My first test blog post!","subtitle":"What will it look like...","contentType":"fun","mainImageCaption":"The cute cat","mainImageAltText":"A cute cat picture","post":"<h2>The Question: Is there a way to change the size of the SVG viewbox with CSS, but preserve the aspect ratio? OR is there another way to preserve the aspect ratio of the SVG without a view box.</h2>\r\n\r\nThe Problem: I want to responsively adjust the size of the SVG, but keep the aspect ratio. The width of the viewbox adjusts with the page, but the height doesn't adjust with the width. The problem with that is that the height of the container div is dependent on the height of the viewbox. So the container div may be really tall even if there's nothing showing in the bottom half of the viewbox.\r\n\r\nFiddle: http://jsfiddle.net/hT9Jb/1/\r\n\r\n<style>\r\n    div{\r\n        width: 100%;\r\n        height: 500px;\r\n        background-color: #00ffff;\r\n    }\r\n\r\n    svg{\r\n        width: 50%;\r\n        background-color: #ffff00;\r\n    }\r\n</style>\r\n\r\n<div>\r\n    <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"250px\" height=\"400px\" viewBox=\"0 0 250 400\" enable-background=\"new 0 0 250 400\" aspect-ratio=\"XminYmin\">\r\n        <rect x=\"0\" y=\"0\" fill=\"#FF0000\" width=\"250\" height=\"400\"/>\r\n    </svg>\r\n</div>\r\n(Object SVGs and img SVGs wont work for my purposes. It has to be inline. The solution doesn't have to be CSS...javascript is definitely an acceptable solution.)\r\n\r\ncss svg\r\nshareedit\r\nasked Jun 28 '14 at 2:44\r\n\r\nGeoffrey Burdett\r\n8821820\r\nlooking for this? jsfiddle.net/hT9Jb/2 – Kheema Pandey Jun 28 '14 at 3:12\r\nThis may be related: stackoverflow.com/questions/23073219/… – Parag Jun 28 '14 at 3:14\r\n@KheemaPandey I want the div to conform to the svg, not the other way around (And the fiddle you gave me doesn't preserve the aspect ratio of the viewbox) – Geoffrey Burdett Jun 29 '14 at 11:24\r\n@Sisyphus That's all serverside, but it does give me a javascript idea. – Geoffrey Burdett Jun 29 '14 at 11:27\r\nadd a comment\r\n6 Answers\r\nactive oldest votes\r\n\r\n5\r\n\r\nI haven't yet found a way to change the viewBox property with CSS. However this Javascript solution works well:\r\n\r\nvar mySVG = document.getElementById('svg');\r\nmySVG.setAttribute(\"viewBox\", \"0 0 100 100\");\r\nAlso remove any references to width and height from the SVG and set them in CSS. Even though your working with an SVG, it's inline so cascading rules apply.\r\n\r\nshareedit\r\nanswered Sep 8 '17 at 4:36\r\n\r\nsansSpoon\r\n725518\r\nadd a comment\r\n\r\n \r\n4\r\n\r\nThe width and height values specified in your SVG are the cause of your problem.\r\n\r\nThe solution is to fix your SVG file. Change:\r\n\r\nwidth=\"250px\" height=\"400px\"\r\nto\r\n\r\nwidth=\"100%\" height=\"100%\"\r\nOr with CSS:\r\n\r\nwidth: 100%;\r\nheight: 100%; \r\nshareedit\r\nedited May 5 '18 at 0:47\r\nanswered Aug 21 '16 at 8:54\r\n\r\nPaul LeBeau\r\n58.5k56996\r\nadd a comment\r\n\r\n2\r\n\r\nIn order to have a flexible SVG, that allows you to change its width and height, you need to remove completely the width and height and work with viewbox instead.\r\n\r\nAnd, contrary to what sansSpoon said, you do not need javascript to do this.\r\n\r\nIn your css, refer to your svg and define its max-width and max-height, for example:\r\n\r\n.my_svg_element {\r\n    max-width: 250px;\r\n    max-width: 400px;\r\n\r\n}\r\nAfter that, your SVG will be elastic and, at the same time, will respect the max width and height you have defined before.\r\n\r\nshareedit\r\nedited Mar 23 '18 at 20:20\r\nanswered Feb 7 '18 at 13:22\r\n\r\nPaulo Coghi\r\n4,22785479\r\nadd a comment\r\n\r\n2\r\n\r\nDid you try:\r\n\r\npreserveAspectRatio='xMinYMin'\r\nCheck this example http://jsfiddle.net/hT9Jb/3/\r\n\r\nFor more details, see mozila documentation about svg","metatitle":"Cute acat alert1","metadescription":"The cute cat will perform well in GOogle","contentTags":"","tagString":"postgresql ","mainImage":{"name":"cat640x360px.jpeg","size":46716,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/cat640x360px.jpeg","type":"image/jpeg"},"thumbnail":{"name":"cat640x360px.jpeg","size":46716,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/cat640x360px.jpeg","type":"image/jpeg"},"authorName":"Bobby Sebolao","date":"Tue Apr 30 2019 18:55:53 GMT+0100 (British Summer Time)","filename":"post-2.html","readingminutes":2},"1556646980980":{"title":"My first test blog post!","subtitle":"What will it look like...","contentType":"fun","mainImageCaption":"The cute cat","mainImageAltText":"A cute cat picture","post":"<h2>The Question: Is there a way to change the size of the SVG viewbox with CSS, but preserve the aspect ratio? OR is there another way to preserve the aspect ratio of the SVG without a view box.</h2>\r\n\r\nThe Problem: I want to responsively adjust the size of the SVG, but keep the aspect ratio. The width of the viewbox adjusts with the page, but the height doesn't adjust with the width. The problem with that is that the height of the container div is dependent on the height of the viewbox. So the container div may be really tall even if there's nothing showing in the bottom half of the viewbox.\r\n\r\nFiddle: http://jsfiddle.net/hT9Jb/1/\r\n\r\n<style>\r\n    div{\r\n        width: 100%;\r\n        height: 500px;\r\n        background-color: #00ffff;\r\n    }\r\n\r\n    svg{\r\n        width: 50%;\r\n        background-color: #ffff00;\r\n    }\r\n</style>\r\n\r\n<div>\r\n    <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"250px\" height=\"400px\" viewBox=\"0 0 250 400\" enable-background=\"new 0 0 250 400\" aspect-ratio=\"XminYmin\">\r\n        <rect x=\"0\" y=\"0\" fill=\"#FF0000\" width=\"250\" height=\"400\"/>\r\n    </svg>\r\n</div>\r\n(Object SVGs and img SVGs wont work for my purposes. It has to be inline. The solution doesn't have to be CSS...javascript is definitely an acceptable solution.)\r\n\r\ncss svg\r\nshareedit\r\nasked Jun 28 '14 at 2:44\r\n\r\nGeoffrey Burdett\r\n8821820\r\nlooking for this? jsfiddle.net/hT9Jb/2 – Kheema Pandey Jun 28 '14 at 3:12\r\nThis may be related: stackoverflow.com/questions/23073219/… – Parag Jun 28 '14 at 3:14\r\n@KheemaPandey I want the div to conform to the svg, not the other way around (And the fiddle you gave me doesn't preserve the aspect ratio of the viewbox) – Geoffrey Burdett Jun 29 '14 at 11:24\r\n@Sisyphus That's all serverside, but it does give me a javascript idea. – Geoffrey Burdett Jun 29 '14 at 11:27\r\nadd a comment\r\n6 Answers\r\nactive oldest votes\r\n\r\n5\r\n\r\nI haven't yet found a way to change the viewBox property with CSS. However this Javascript solution works well:\r\n\r\nvar mySVG = document.getElementById('svg');\r\nmySVG.setAttribute(\"viewBox\", \"0 0 100 100\");\r\nAlso remove any references to width and height from the SVG and set them in CSS. Even though your working with an SVG, it's inline so cascading rules apply.\r\n\r\nshareedit\r\nanswered Sep 8 '17 at 4:36\r\n\r\nsansSpoon\r\n725518\r\nadd a comment\r\n\r\n \r\n4\r\n\r\nThe width and height values specified in your SVG are the cause of your problem.\r\n\r\nThe solution is to fix your SVG file. Change:\r\n\r\nwidth=\"250px\" height=\"400px\"\r\nto\r\n\r\nwidth=\"100%\" height=\"100%\"\r\nOr with CSS:\r\n\r\nwidth: 100%;\r\nheight: 100%; \r\nshareedit\r\nedited May 5 '18 at 0:47\r\nanswered Aug 21 '16 at 8:54\r\n\r\nPaul LeBeau\r\n58.5k56996\r\nadd a comment\r\n\r\n2\r\n\r\nIn order to have a flexible SVG, that allows you to change its width and height, you need to remove completely the width and height and work with viewbox instead.\r\n\r\nAnd, contrary to what sansSpoon said, you do not need javascript to do this.\r\n\r\nIn your css, refer to your svg and define its max-width and max-height, for example:\r\n\r\n.my_svg_element {\r\n    max-width: 250px;\r\n    max-width: 400px;\r\n\r\n}\r\nAfter that, your SVG will be elastic and, at the same time, will respect the max width and height you have defined before.\r\n\r\nshareedit\r\nedited Mar 23 '18 at 20:20\r\nanswered Feb 7 '18 at 13:22\r\n\r\nPaulo Coghi\r\n4,22785479\r\nadd a comment\r\n\r\n2\r\n\r\nDid you try:\r\n\r\npreserveAspectRatio='xMinYMin'\r\nCheck this example http://jsfiddle.net/hT9Jb/3/\r\n\r\nFor more details, see mozila documentation about svg","metatitle":"Cute acat alert1","metadescription":"The cute cat will perform well in GOogle","contentTags":"","tagString":"","mainImage":{"name":"cat640x360px.jpeg","size":46716,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/cat640x360px.jpeg","type":"image/jpeg"},"thumbnail":{"name":"cat640x360px.jpeg","size":46716,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/cat640x360px.jpeg","type":"image/jpeg"},"authorName":"Bobby Sebolao","date":"Tue Apr 30 2019 18:56:20 GMT+0100 (British Summer Time)","filename":"post-3.html","readingminutes":2},"1556647034822":{"title":"pokpok","subtitle":"pokpokpok","contentType":"fun","mainImageCaption":"pokpokp","mainImageAltText":"okpokpok","post":"pokpok","metatitle":"pokpok","metadescription":"pokpokp","contentTags":"","tagString":"cookie heroku ","mainImage":{"name":"confused-keanu-640x360px.jpeg","size":28684,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/confused-keanu-640x360px.jpeg","type":"image/jpeg"},"thumbnail":{"name":"confused-keanu-640x360px.jpeg","size":28684,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/confused-keanu-640x360px.jpeg","type":"image/jpeg"},"authorName":"Bobby Sebolao","date":"Tue Apr 30 2019 18:57:14 GMT+0100 (British Summer Time)","filename":"post-4.html","readingminutes":0},"1556647060089":{"title":"pokpok","subtitle":"pokpokpok","contentType":"fun","mainImageCaption":"pokpokp","mainImageAltText":"okpokpok","post":"<h2>The Question: Is there a way to change the size of the SVG viewbox with CSS, but preserve the aspect ratio? OR is there another way to preserve the aspect ratio of the SVG without a view box.</h2>\r\n\r\nThe Problem: I want to responsively adjust the size of the SVG, but keep the aspect ratio. The width of the viewbox adjusts with the page, but the height doesn't adjust with the width. The problem with that is that the height of the container div is dependent on the height of the viewbox. So the container div may be really tall even if there's nothing showing in the bottom half of the viewbox.\r\n\r\nFiddle: http://jsfiddle.net/hT9Jb/1/\r\n\r\n<style>\r\n    div{\r\n        width: 100%;\r\n        height: 500px;\r\n        background-color: #00ffff;\r\n    }\r\n\r\n    svg{\r\n        width: 50%;\r\n        background-color: #ffff00;\r\n    }\r\n</style>\r\n\r\n<div>\r\n    <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"250px\" height=\"400px\" viewBox=\"0 0 250 400\" enable-background=\"new 0 0 250 400\" aspect-ratio=\"XminYmin\">\r\n        <rect x=\"0\" y=\"0\" fill=\"#FF0000\" width=\"250\" height=\"400\"/>\r\n    </svg>\r\n</div>\r\n(Object SVGs and img SVGs wont work for my purposes. It has to be inline. The solution doesn't have to be CSS...javascript is definitely an acceptable solution.)\r\n\r\ncss svg\r\nshareedit\r\nasked Jun 28 '14 at 2:44\r\n\r\nGeoffrey Burdett\r\n8821820\r\nlooking for this? jsfiddle.net/hT9Jb/2 – Kheema Pandey Jun 28 '14 at 3:12\r\nThis may be related: stackoverflow.com/questions/23073219/… – Parag Jun 28 '14 at 3:14\r\n@KheemaPandey I want the div to conform to the svg, not the other way around (And the fiddle you gave me doesn't preserve the aspect ratio of the viewbox) – Geoffrey Burdett Jun 29 '14 at 11:24\r\n@Sisyphus That's all serverside, but it does give me a javascript idea. – Geoffrey Burdett Jun 29 '14 at 11:27\r\nadd a comment\r\n6 Answers\r\nactive oldest votes\r\n\r\n5\r\n\r\nI haven't yet found a way to change the viewBox property with CSS. However this Javascript solution works well:\r\n\r\nvar mySVG = document.getElementById('svg');\r\nmySVG.setAttribute(\"viewBox\", \"0 0 100 100\");\r\nAlso remove any references to width and height from the SVG and set them in CSS. Even though your working with an SVG, it's inline so cascading rules apply.\r\n\r\nshareedit\r\nanswered Sep 8 '17 at 4:36\r\n\r\nsansSpoon\r\n725518\r\nadd a comment\r\n\r\n \r\n4\r\n\r\nThe width and height values specified in your SVG are the cause of your problem.\r\n\r\nThe solution is to fix your SVG file. Change:\r\n\r\nwidth=\"250px\" height=\"400px\"\r\nto\r\n\r\nwidth=\"100%\" height=\"100%\"\r\nOr with CSS:\r\n\r\nwidth: 100%;\r\nheight: 100%; \r\nshareedit\r\nedited May 5 '18 at 0:47\r\nanswered Aug 21 '16 at 8:54\r\n\r\nPaul LeBeau\r\n58.5k56996\r\nadd a comment\r\n\r\n2\r\n\r\nIn order to have a flexible SVG, that allows you to change its width and height, you need to remove completely the width and height and work with viewbox instead.\r\n\r\nAnd, contrary to what sansSpoon said, you do not need javascript to do this.\r\n\r\nIn your css, refer to your svg and define its max-width and max-height, for example:\r\n\r\n.my_svg_element {\r\n    max-width: 250px;\r\n    max-width: 400px;\r\n\r\n}\r\nAfter that, your SVG will be elastic and, at the same time, will respect the max width and height you have defined before.\r\n\r\nshareedit\r\nedited Mar 23 '18 at 20:20\r\nanswered Feb 7 '18 at 13:22\r\n\r\nPaulo Coghi\r\n4,22785479\r\nadd a comment\r\n\r\n2\r\n\r\nDid you try:\r\n\r\npreserveAspectRatio='xMinYMin'\r\nCheck this example http://jsfiddle.net/hT9Jb/3/\r\n\r\nFor more details, see mozila documentation about svg","metatitle":"pokpok","metadescription":"pokpokp","contentTags":"","tagString":"","mainImage":{"name":"confused-keanu-640x360px.jpeg","size":28684,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/confused-keanu-640x360px.jpeg","type":"image/jpeg"},"thumbnail":{"name":"confused-keanu-640x360px.jpeg","size":28684,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/confused-keanu-640x360px.jpeg","type":"image/jpeg"},"authorName":"Bobby Sebolao","date":"Tue Apr 30 2019 18:57:40 GMT+0100 (British Summer Time)","filename":"post-5.html","readingminutes":2},"1556647101171":{"title":"pokpok","subtitle":"pokpokpok","contentType":"fun","mainImageCaption":"pokpokp","mainImageAltText":"okpokpok","post":"<h2>Before you decode the JWT token, first you need to have an idea about the structure of the JWT token. JWT token consist of 3 main parts. Header, payload and signature. Each part contains different claims which provide user data.</h2>\r\n\r\nHeader contain the data about the JWT token such as type and algorithm. Payload mainly contain the data about the user. There are predefined claims that can use to save JWT token created date, token expiring date, subject of the token, audience of the token etc. In addition to predefined claims,we can add claims according to programmers will (Ex- a nickname, email address etc). In the signature section, encoded header, encoded payload and a secret are signed together.\r\n\r\nOkay, now we know what is JWT token. But do you know where is it?\r\n\r\n\r\nLemme guess that you don’t know where is the token and explain where you can find it. Usually programmers save tokens in web storage or cookies. It doesn’t matter where you save the token.Because it will always be a JWT structured token. So you just have to take the token from it’s secret place and use it to decode.\r\n\r\nNow that we know where to find the token, let’s have a quick inspection on the token we found. When we look at the parts of the JTW token, we can see that payload contains the most of the data that a programmer needs. Because it can have user defined claims. So our main target is to decode the payload. Given below is an example of a JWT token.\r\n\r\n\r\nDude, i found my token!\r\nAs you can see the whole token is separated with two ‘dot’s. In another word, this token is separated into three parts by two ‘dot’s. First part of the token is the Header and second part of the token is Payload and third part of the payload is Signature. So now we know what part of the token is the payload and what part of the payload is need to be extract (Its the pink color text that we need to extract :D ).\r\n\r\nFirst we take JWT token and split the string using ‘dot’ operator. As we all know when we use the split() function, we get an array. So we have to take the second element of the array.","metatitle":"pokpok","metadescription":"pokpokp","contentTags":"","tagString":"","mainImage":{"name":"confused-keanu-640x360px.jpeg","size":28684,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/confused-keanu-640x360px.jpeg","type":"image/jpeg"},"thumbnail":{"name":"confused-keanu-640x360px.jpeg","size":28684,"path":"/Users/bobbysebolao/Documents/github/bobbysebolao.github.io/public/assets/images/blog/confused-keanu-640x360px.jpeg","type":"image/jpeg"},"authorName":"Bobby Sebolao","date":"Tue Apr 30 2019 18:58:21 GMT+0100 (British Summer Time)","filename":"post-6.html","readingminutes":2}}